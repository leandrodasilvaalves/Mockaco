"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[676],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(n),f=o,m=l["".concat(c,".").concat(f)]||l[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8674:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},i="indented attribute",s={unversionedId:"reference/response/indented-attribute",id:"reference/response/indented-attribute",title:"indented attribute",description:"Sets the response body indentation for some structured content-types. If ommited, defaults to `true`.",source:"@site/docs/reference/response/indented-attribute.md",sourceDirName:"reference/response",slug:"/reference/response/indented-attribute",permalink:"/Mockaco/docs/reference/response/indented-attribute",draft:!1,editUrl:"https://github.com/natenho/Mockaco/tree/master/website/docs/reference/response/indented-attribute.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"headers attribute",permalink:"/Mockaco/docs/reference/response/headers-attribute"},next:{title:"status attribute",permalink:"/Mockaco/docs/reference/response/status-attribute"}},c={},p=[{value:"Example",id:"example",level:2}],u={toc:p},l="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"indented-attribute"},"indented attribute"),(0,o.kt)("p",null,"Sets the response body indentation for some structured content-types. If ommited, defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "request": {\n    "method": "GET"\n  },\n  "response": {    \n    "status": "OK",\n    "body": {\n      "this": "json content",\n      "is": "supposed to be",\n      "in": "the same line"\n    },\n    "indented": false\n  }\n}\n')),(0,o.kt)("p",null,"Result:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'curl -iX GET http://localhost:5000\n\nHTTP/1.1 200 OK\nDate: Wed, 31 Jul 2019 02:57:30 GMT\nContent-Type: application/json\nServer: Kestrel\nTransfer-Encoding: chunked\n\n{"this":"json content","is":"supposed to be","in":"the same line"}\n')))}d.isMDXComponent=!0}}]);